"""
Django settings for nft project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

import os

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5f&gxa0x4pz5#mt(4nm44f=$f8$ho9o)5-w!j*ze!6-st#oen@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Gestion des fichiers statiques (CSS, JS, images)
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Lecture des variables d’environnement (facultatif mais conseillé)
SECRET_KEY = os.getenv('SECRET_KEY', 'une_clef_de_securite_par_defaut_pour_le_dev')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'metasouk',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'nft.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'metasouk.context_processors.cart_item_count',
            ],
        },
    },
]

WSGI_APPLICATION = 'nft.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

import os

DATABASES = {
    'default': {
<<<<<<< HEAD
        'ENGINE': 'django.db.backends.mysql',     # Utilisation de MySQL
        'NAME': 'ntf_db',                 # Le nom de ta base MySQL
        'USER': 'ntf_db',                           # L'utilisateur MySQL (généralement 'root' sur WAMP)
        'PASSWORD': '1234',                           # Le mot de passe (laisser vide si tu n'en as pas)
        'HOST': '127.0.0.1',                         # Adresse du localhost        
        'PORT': '3306',                           # Le port par défaut de MySQL
        'OPTIONS': {
            'sql_mode': 'STRICT_TRANS_TABLES',  # Activer le mode strict
        },
=======
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.environ.get('MYSQL_ADDON_DB', 'bqohgvm5revy07w1lew6'),
        'USER': os.environ.get('MYSQL_ADDON_USER', 'uqo4s5qfyk53lhpp'),
        'PASSWORD': os.environ.get('MYSQL_ADDON_PASSWORD', 'FKu5r25XmseygWivmYd3'),
        'HOST': os.environ.get('MYSQL_ADDON_HOST', 'bqohgvm5revy07w1lew6-mysql.services.clever-cloud.com'),
        'PORT': os.environ.get('MYSQL_ADDON_PORT', '3306'),
>>>>>>> 6cb833d (Ready for Clever Cloud)
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'

# Pour l'environnement de production, les fichiers statiques seront collectés dans ce dossier
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Dossiers supplémentaires où Django cherche des fichiers statiques pendant le développement

STATICFILES_DIRS = [
    BASE_DIR / 'metasouk/static',  
]



# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field
X_FRAME_OPTIONS = 'DENY'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


import os

BASE_DIR = Path(__file__).resolve().parent.parent

# Assurez-vous que MEDIA_ROOT pointe vers le répertoire où se trouvent vos fichiers médias
MEDIA_URL = '/media/'  # URL pour accéder aux fichiers médias
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Répertoire où les fichiers sont stockés

from decouple import config

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'projetmc704@gmail.com'
EMAIL_HOST_PASSWORD = 'xwovjuzrayqooxzc'
DEFAULT_FROM_EMAIL = 'projetmc704@gmail.com'

